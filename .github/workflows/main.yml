name: Deploy to EKS


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
   
    - name: Build, Tag, and Push Docker Image
      run: |
        IMAGE_TAG=latest
        REPOSITORY_NAME=app-flask-demo
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        ECR_URL="$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com"
        echo $ECR_URL
        REPOSITORY_URI="$ECR_URL/$REPOSITORY_NAME"
	
    - name: Build and Push Docker Image
      run: |
          echo "Logging into ECR"
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin "$(aws sts get-caller-identity --query Account --output text).dkr.ecr.eu-west-1.amazonaws.com"
          echo "Cloning Repository"
          git clone https://github.com/Muhammedashraf10/pwc-demo.git
          cd flask-app
          echo Build started on `date`
          echo "Building the Docker image..."
          sudo docker build -t my-flask-app .
          echo "Pushing the image"
          docker tag my-flask-app:latest $REPOSITORY_URI:$IMAGE_TAG
          echo "Pushing the image"
	  docker push $REPOSITORY_URI:$IMAGE_TAG

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name eks-demo
          
    - name: Deploy the application
      run: |
        echo "deploying the yaml"
        kubectl apply -f deployment.yaml
